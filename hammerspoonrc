hs.hotkey.bind({'cmd', 'alt', 'ctrl'}, 'Left', function()
  local win = hs.window.focusedWindow()
  local f = win:frame()
  local screen = win:screen()
  local max = screen:frame()

  f.x = max.x
  f.y = max.y
  f.w = max.w / 2
  f.h = max.h
  win:setFrame(f)
end)

hs.hotkey.bind({'cmd', 'alt', 'ctrl'}, 'Right', function()
  local win = hs.window.focusedWindow()
  local f = win:frame()
  local screen = win:screen()
  local max = screen:frame()

  f.x = max.x + (max.w / 2)
  f.y = max.y
  f.w = max.w / 2
  f.h = max.h
  win:setFrame(f)
end)

hs.hotkey.bind({'cmd', 'alt', 'ctrl'}, 'r', function()
	hs.reload()
	hs.alert.show('Config loaded')
end)

hs.window.filter.new('Google Chrome')
	:subscribe(hs.window.filter.windowFocused, function()
		if chromeModal then return true end

		chromeModal = hs.hotkey.modal.new('ctrl', 'space')

		chromeModal:bind('', 'c', function()
			chromeModal:exit()
			local chrome = hs.appfinder.appFromName('Google Chrome')
			chrome:selectMenuItem({ 'View', 'Developer', 'JavaScript Console' })
		end)

		chromeModal:bind('', 'p', function()
			chromeModal:exit()

			function deleteModalBindings()
				for i, binding in ipairs(chromeModalBindings) do binding:delete() end
			end

			function selectChromeMenu(option)
				hs.appfinder.appFromName('Google Chrome'):selectMenuItem(option)
			end

			chromeModalBindings = {
				hs.hotkey.bind('', 'escape', function()
					deleteModalBindings()
				end),

				hs.hotkey.bind('', 'a', function()
					deleteModalBindings()
					selectChromeMenu({'People', 'Nutrien Admin'})
				end),

				hs.hotkey.bind('', 'd', function()
					deleteModalBindings()
					selectChromeMenu({'People', 'Nutrien Dev'})
				end),

				hs.hotkey.bind('', 'n', function()
					deleteModalBindings()
					selectChromeMenu({'People', 'Nutrien'})
				end),

				hs.hotkey.bind('', 't', function()
					deleteModalBindings()
					selectChromeMenu({'People', 'T-Lo'})
				end)
			}
		end)

		chromeModal:bind('', 'escape', function()
			chromeModal:exit()
		end)
	end)
	:subscribe(hs.window.filter.windowUnfocused, function()
		chromeModal:delete()
		chromeModal = nil
	end)

hs.window.filter.new('Mail')
	:subscribe(hs.window.filter.windowFocused, function()
		if mailModal then return true end

		mailHotkeys = {
			hs.hotkey.bind('cmd', 'return', function()
				mail:selectMenuItem({'Message', 'Send'})
			end)
		}

		mailModal = hs.hotkey.modal.new('ctrl', 'space')
		mail = hs.appfinder.appFromName('Mail')

		mailModal:bind('', 'a', function()
			mailModal:exit()
			mail:selectMenuItem({'Message', 'Archive'})
		end)

		mailModal:bind('', 'escape', function()
			mailModal:exit()
		end)
	end)
	:subscribe(hs.window.filter.windowUnfocused, function()
		mailModal:delete()
		mailModal = nil
		mail = nil

		for i, hotkey in ipairs(mailHotkeys) do hotkey:delete() end
	end)

hs.alert.show('Config loaded')
